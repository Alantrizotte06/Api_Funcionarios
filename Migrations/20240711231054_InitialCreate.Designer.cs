// <auto-generated />
using FuncionarioApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FuncionarioApi.Migrations
{
    [DbContext(typeof(FuncionarioContext))]
    [Migration("20240711231054_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("FuncionarioApi.Models.Funcionario", b =>
                {
                    b.Property<string>("Cpf")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Departamento")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<double>("Salario")
                        .HasColumnType("double");

                    b.HasKey("Cpf");

                    b.ToTable("Funcionario", (string)null);

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("FuncionarioApi.Models.Desenvolvedor", b =>
                {
                    b.HasBaseType("FuncionarioApi.Models.Funcionario");

                    b.Property<string>("LinguagemDeProgramacao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.ToTable("Desenvolvedor", (string)null);
                });

            modelBuilder.Entity("FuncionarioApi.Models.Estagiario", b =>
                {
                    b.HasBaseType("FuncionarioApi.Models.Funcionario");

                    b.Property<int>("HorasPorSemana")
                        .HasColumnType("int");

                    b.ToTable("Estagiario", (string)null);
                });

            modelBuilder.Entity("FuncionarioApi.Models.Gerente", b =>
                {
                    b.HasBaseType("FuncionarioApi.Models.Funcionario");

                    b.Property<double>("Bonificacao")
                        .HasColumnType("double");

                    b.ToTable("Gerente", (string)null);
                });

            modelBuilder.Entity("FuncionarioApi.Models.Desenvolvedor", b =>
                {
                    b.HasOne("FuncionarioApi.Models.Funcionario", null)
                        .WithOne()
                        .HasForeignKey("FuncionarioApi.Models.Desenvolvedor", "Cpf")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FuncionarioApi.Models.Estagiario", b =>
                {
                    b.HasOne("FuncionarioApi.Models.Funcionario", null)
                        .WithOne()
                        .HasForeignKey("FuncionarioApi.Models.Estagiario", "Cpf")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FuncionarioApi.Models.Gerente", b =>
                {
                    b.HasOne("FuncionarioApi.Models.Funcionario", null)
                        .WithOne()
                        .HasForeignKey("FuncionarioApi.Models.Gerente", "Cpf")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
